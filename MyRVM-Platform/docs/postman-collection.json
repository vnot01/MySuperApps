{
  "info": {
    "name": "MyRVM v2.1 - Deposit API Testing",
    "description": "Collection untuk testing API Deposit Management dengan AI Analysis",
    "version": "2.1.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000/api/v2",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "deposit_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john@test.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('auth_token', response.data.token);",
                  "        console.log('Token saved:', response.data.token);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get User Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Deposit Management",
      "item": [
        {
          "name": "Create Deposit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rvm_id\": 1,\n  \"waste_type\": \"plastic\",\n  \"weight\": 0.5,\n  \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/deposits",
              "host": ["{{base_url}}"],
              "path": ["deposits"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.deposit_id) {",
                  "        pm.collectionVariables.set('deposit_id', response.data.deposit_id);",
                  "        console.log('Deposit ID saved:', response.data.deposit_id);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "List Deposits",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/deposits?per_page=10",
              "host": ["{{base_url}}"],
              "path": ["deposits"],
              "query": [
                {
                  "key": "per_page",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "List Deposits with Status Filter",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/deposits?status=processing",
              "host": ["{{base_url}}"],
              "path": ["deposits"],
              "query": [
                {
                  "key": "status",
                  "value": "processing"
                }
              ]
            }
          }
        },
        {
          "name": "Get Deposit Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/deposits/statistics",
              "host": ["{{base_url}}"],
              "path": ["deposits", "statistics"]
            }
          }
        },
        {
          "name": "Get Single Deposit",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/deposits/{{deposit_id}}",
              "host": ["{{base_url}}"],
              "path": ["deposits", "{{deposit_id}}"]
            }
          }
        },
        {
          "name": "Process Deposit - Approve",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/deposits/{{deposit_id}}/process",
              "host": ["{{base_url}}"],
              "path": ["deposits", "{{deposit_id}}", "process"]
            }
          }
        },
        {
          "name": "Process Deposit - Reject",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"rejected\",\n  \"rejection_reason\": \"Quality tidak memenuhi standar\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/deposits/{{deposit_id}}/process",
              "host": ["{{base_url}}"],
              "path": ["deposits", "{{deposit_id}}", "process"]
            }
          }
        }
      ]
    },
    {
      "name": "User Balance",
      "item": [
        {
          "name": "Get User Balance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/user/balance",
              "host": ["{{base_url}}"],
              "path": ["user", "balance"]
            }
          }
        },
        {
          "name": "Get User Vouchers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/user/vouchers",
              "host": ["{{base_url}}"],
              "path": ["user", "vouchers"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Create Deposit - Invalid RVM ID",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rvm_id\": 999,\n  \"waste_type\": \"plastic\",\n  \"weight\": 0.5,\n  \"quantity\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/deposits",
              "host": ["{{base_url}}"],
              "path": ["deposits"]
            }
          }
        },
        {
          "name": "Create Deposit - Missing Fields",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"waste_type\": \"plastic\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/deposits",
              "host": ["{{base_url}}"],
              "path": ["deposits"]
            }
          }
        },
        {
          "name": "Get Non-existent Deposit",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/deposits/999",
              "host": ["{{base_url}}"],
              "path": ["deposits", "999"]
            }
          }
        },
        {
          "name": "Process Non-existent Deposit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/deposits/999/process",
              "host": ["{{base_url}}"],
              "path": ["deposits", "999", "process"]
            }
          }
        }
      ]
    },
    {
      "name": "Test Scenarios",
      "item": [
        {
          "name": "Complete Deposit Flow",
          "item": [
            {
              "name": "1. Create Deposit",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"rvm_id\": 1,\n  \"waste_type\": \"plastic\",\n  \"weight\": 0.5,\n  \"quantity\": 2\n}"
                },
                "url": {
                  "raw": "{{base_url}}/deposits",
                  "host": ["{{base_url}}"],
                  "path": ["deposits"]
                }
              }
            },
            {
              "name": "2. Check Deposit Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/deposits/{{deposit_id}}",
                  "host": ["{{base_url}}"],
                  "path": ["deposits", "{{deposit_id}}"]
                }
              }
            },
            {
              "name": "3. Process Deposit",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"completed\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/deposits/{{deposit_id}}/process",
                  "host": ["{{base_url}}"],
                  "path": ["deposits", "{{deposit_id}}", "process"]
                }
              }
            },
            {
              "name": "4. Verify Final Status",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/deposits/{{deposit_id}}",
                  "host": ["{{base_url}}"],
                  "path": ["deposits", "{{deposit_id}}"]
                }
              }
            },
            {
              "name": "5. Check User Balance",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/user/balance",
                  "host": ["{{base_url}}"],
                  "path": ["user", "balance"]
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('Making request to:', pm.request.url);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('Response has success field', function () {",
          "    const response = pm.response.json();",
          "    pm.expect(response).to.have.property('success');",
          "});"
        ]
      }
    }
  ]
}
